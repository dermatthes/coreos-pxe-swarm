#!/bin/bash

set -e


ls -l /root


if [ ! -e "/root/firewall.rules" ]
then
    echo "Createing empty firewall rules"
    touch /root/firewall.rules
fi

if [ ! -e "/root/master_run.sh" ]
then
    echo "Creating empty /root/master_run.sh"
    touch /root/master_run.sh
fi

if [ ! -f "/root/master_run.sh" ]
then
    echo "[ERROR] /root/master_run.sh is no regular file"
    exit -1
fi

if [ ! -e "/root/bootstrap_run.sh" ]
then
    echo "Creating empty /root/bootstrap_run.sh"
    touch /root/bootstrap_run.sh
fi

if [ ! -f "/root/bootstrap_run.sh" ]
then
    echo "[ERROR] /root/bootstrap_run.sh is no regular file"
    exit -1
fi


if [ $DEVMODE = '1' ]
then
    echo "Devmode startup..."
    echo ""
    /bin/bash
    exit
fi

if [ -e "/root/config" ]
then
    if [ ! -f "/root/config" ]; then
        echo "/root/config must be a regular file."
        exit 1
    fi
    echo "Loading config from /config"
else
    echo "Loading empty configuration file"
    touch /root/config
fi

echo "Executing /root/config...";
. /root/config




if [ $MODE = 'BOOTSTRAP' ]
then
    echo "BOOTSTRAP MODE..."

    ifconfig $INTERFACE_BOOTSTRAP
    if [[ $? != 0 ]]
    then
        echo "[ERROR!] Failed to autodetect ip address on interface: $INTERFACE_BOOTSTRAP"
        echo "[ERROR!] Try setting -e INTERFACE_BOOTSTRAP to the correct network interface"
        echo "[FAIL!]"
        exit 255;
    fi

    export PXE_SERVER_IP=$(ifconfig $INTERFACE_BOOTSTRAP | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}')
    echo Autodetect PXE_SERVER_IP: $PXE_SERVER_IP


    #echo "BOOTSTRAP-MODE: Creating new ssh key pair for inter cluster communication"
    #echo "Keygen deativated!"
    #ssh-keygen -b 2048 -t rsa -f /root/id_rsa -q -N ""
    #echo "KEYGEN DONE!"
fi

# Using DHCP Proxy Mode
if [ $DHCP_RANGE = '0' ]
then
    DHCP_RANGE_SET="$PXE_SERVER_IP,proxy"
else
    DHCP_RANGE_SET="$DHCP_RANGE"
fi
echo "DHCP_RANGE_SET is $DHCP_RANGE_SET"


echo "Use default configs" && cp -a /app/config/. /config

# Copy to tftp root
cp -R /config/pxelinux.cfg /app/tftp
chmod a+r /app/tftp/pxelinux.cfg/*

# Update pxelinux config to point real server ip
sed -i -e s/%\(server_ip\)s/$PXE_SERVER_IP/ /app/tftp/pxelinux.cfg/*

echo "Starting cloudconfig webserver (make sure to block outside requests to port 888)..."
# Start http server to host cloud.config

cd /app/httpd/&& ./runHttpd.sh &





# Start dnsmasq as dhcp proxy to $pxe_server_ip
if [ $MODE = 'WORKERJOIN' ]
then
    ln -s /app/tftp/pxelinux.cfg/workerjoin /app/tftp/pxelinux.cfg/default
    echo "MODE SELECT: JOIN MODE!"
    dnsmasq \
        --dhcp-range=$DHCP_RANGE_SET \
        --dhcp-no-overrid \
        --dhcp-boot=pxelinux.0,pxeserver,$PXE_SERVER_IP \
        --pxe-service=x86PC,"Join existing CoreOS Cluster",pxelinux \
        --enable-tftp \
        --tftp-root=/app/tftp \
        --user=root \
        --no-daemon
fi

if [ $MODE = 'BOOTSTRAP' ]
then
    ln -s /app/tftp/pxelinux.cfg/bootstrap /app/tftp/pxelinux.cfg/default

    sleep 1
    dnsmasq \
        --dhcp-range=$DHCP_RANGE_SET \
        --dhcp-no-overrid \
        --dhcp-boot=pxelinux.0,pxeserver,$PXE_SERVER_IP \
        --pxe-service=x86PC,"Bootstrap CoreOS Cluster",pxelinux \
        --enable-tftp \
        --tftp-root=/app/tftp \
        --user=root
    echo "MODE SELECT: BOOTSTRAP MODE! (new cluster only!) - Waiting 5 Minutes to join first node."
    echo "Make sure to backup your ssh private key to access"
    echo "[-> BOOT YOUR FIRST SERVER NOW!]"
    . /app/wait_firstshot.sh
fi

echo "ERROR: No MODE selected!"
